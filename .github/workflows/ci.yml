name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonar:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B package -DskipTests org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=norberttalpos_baguette-microservices

  docker_build_push:
    needs: sonar
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
        name: Check out code

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Add application-secret.yml for auth-service
        env:
          APPLICATION_SECRET_YML: ${{ secrets.APPLICATION_SECRET_YML }}
        run: |
          touch ./auth-service/auth-core/src/main/resources/application-secret.yml
          echo $APPLICATION_SECRET_YML > ./auth-service/auth-core/src/main/resources/application-secret.yml

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: norberttalpos
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build jars and docker images, push to Dockerhub repository
        run: mvn -B package -DskipTests -P build-docker-image